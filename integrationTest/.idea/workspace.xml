<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7eca82e0-6a19-4764-9c33-3cbea91b64b7" name="Changes" comment="study: 스프링 기반 통합 테스트 - Kafka 통합 테스트 안정성을 위한 @DirtiesContext 추가 및 consume 설정 개선&#10;&#10;- @DirtiesContext(classMode = AFTER_EACH_TEST_METHOD) 추가&#10;  → 테스트 간 Spring 컨텍스트를 매번 초기화하여 Kafka 메시지 중복 수신 방지&#10;  → 테스트 간 상태 공유로 인한 오작동 방지 (특히 Kafka embedded broker 사용 시)&#10;  &#10;- embeddedKafkaBroker.consumeFromAnEmbeddedTopic() 인자 개선&#10;  → 기존: consumer, true, topicName&#10;  → 변경: consumer, topicName&#10;  → 최신 Spring Kafka API에 맞게 auto-commit 설정 제거하여 안정성 향상&#10;  &#10;- 목적: 통합 테스트에서 Kafka 메시지 누락, 중복 등 상태 의존성 제거">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="JpbToolWindowState">
    <option name="isToolWindowVisible" value="false" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 2
}]]></component>
  <component name="ProjectId" id="2z60bIZqu648656Zqs0DK8xHDyH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Downloaded.Files.Path.Enabled": "false",
    "Gradle.Build integrationTest.executor": "Run",
    "Gradle.IntegrationTestApplicationTests (1).executor": "Run",
    "Gradle.IntegrationTestApplicationTests.executor": "Run",
    "Gradle.LibraryServiceSpec.executor": "Run",
    "Gradle.LibraryServiceUsingDBSpec.executor": "Run",
    "Gradle.LibraryServiceUsingDBSpec.도서 이용 가능 여부를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsinAPIAndKafkaSpec.executor": "Run",
    "JUnit.LibraryServiceUsinAPIAndKafkaSpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsinAPIAndKafkaSpec.도서 이용 가능 여부를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsinAPISpec.executor": "Run",
    "JUnit.LibraryServiceUsinAPISpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsinAPISpec.도서 이용 가능 여부를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsingDBSpec.executor": "Run",
    "JUnit.LibraryServiceUsingDBSpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다.executor": "Run",
    "JUnit.LibraryServiceUsingDBSpec.도서 이용 가능 여부를 확인한다.executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/kimyena/Documents/web/Chating-platform/integrationTest/src/test/groovy",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/groovy" />
      <recent name="$PROJECT_DIR$/src/main/java/com/study/integrationtest" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.study.integrationtest" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.study.integrationtest.integration" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.LibraryServiceUsinAPIAndKafkaSpec.도서 이용 가능 여부를 확인한다">
    <configuration name="LibraryServiceUsinAPIAndKafkaSpec" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="integrationTest.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.study.integrationtest.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.study.integrationtest.integration" />
      <option name="MAIN_CLASS_NAME" value="com.study.integrationtest.integration.LibraryServiceUsinAPIAndKafkaSpec" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServiceUsinAPIAndKafkaSpec.도서 이용 가능 여부를 확인한다" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="integrationTest.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.study.integrationtest.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.study.integrationtest.integration" />
      <option name="MAIN_CLASS_NAME" value="com.study.integrationtest.integration.LibraryServiceUsinAPIAndKafkaSpec" />
      <option name="METHOD_NAME" value="도서 이용 가능 여부를 확인한다" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServiceUsinAPIAndKafkaSpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="integrationTest.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.study.integrationtest.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.study.integrationtest.integration" />
      <option name="MAIN_CLASS_NAME" value="com.study.integrationtest.integration.LibraryServiceUsinAPIAndKafkaSpec" />
      <option name="METHOD_NAME" value="대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServiceUsinAPISpec" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="integrationTest.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.study.integrationtest.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.study.integrationtest.integration" />
      <option name="MAIN_CLASS_NAME" value="com.study.integrationtest.integration.LibraryServiceUsinAPISpec" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServiceUsinAPISpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="integrationTest.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.study.integrationtest.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.study.integrationtest.integration" />
      <option name="MAIN_CLASS_NAME" value="com.study.integrationtest.integration.LibraryServiceUsinAPISpec" />
      <option name="METHOD_NAME" value="대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="preview_spock_integration" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="preview_spock_integration" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="IntegrationTestApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="integrationTest.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.study.integrationtest.IntegrationTestApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.LibraryServiceUsinAPIAndKafkaSpec.도서 이용 가능 여부를 확인한다" />
        <item itemvalue="JUnit.LibraryServiceUsinAPIAndKafkaSpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" />
        <item itemvalue="JUnit.LibraryServiceUsinAPIAndKafkaSpec" />
        <item itemvalue="JUnit.LibraryServiceUsinAPISpec" />
        <item itemvalue="JUnit.LibraryServiceUsinAPISpec.대출 요청 시 도서 상태에 따른 처리 결과를 확인한다" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7eca82e0-6a19-4764-9c33-3cbea91b64b7" name="Changes" comment="" />
      <created>1751036284775</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751036284775</updated>
      <workItem from="1751036285738" duration="18055000" />
    </task>
    <task id="LOCAL-00001" summary="study: 스프링 기반 통합 테스트 - 도서 대출 시스템 초기 구현&#10;&#10;- Book 엔티티 생성(isbn, title, available 필드 포함)&#10;- BookRepository를 통해 ISBN으로 책 조회 기능 구현&#10;- LibraryService에서 책 대출 가능 여부 확인 및 대출 기능 구현&#10;- PushService를 이용해 Kafka로 대출 완료 알림 전송 기능 추가">
      <option name="closed" value="true" />
      <created>1751181847969</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1751181847969</updated>
    </task>
    <task id="LOCAL-00002" summary="study: 스프링 기반 통합 테스트 - controller 작성, DB를 연동하는 통합테스트 구성 진행">
      <option name="closed" value="true" />
      <created>1751185489135</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1751185489135</updated>
    </task>
    <task id="LOCAL-00003" summary="study: 스프링 기반 통합 테스트 - API 테스트">
      <option name="closed" value="true" />
      <created>1751187111286</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1751187111286</updated>
    </task>
    <task id="LOCAL-00004" summary="study: 스프링 기반 통합 테스트 - Kafka 연동하는 테스트&#10;&#10;- Spring Boot + Kafka 환경에서 API와 메시지 전송이 제대로 동작하는지 확인">
      <option name="closed" value="true" />
      <created>1751188906676</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1751188906677</updated>
    </task>
    <task id="LOCAL-00005" summary="study: 스프링 기반 통합 테스트 - Kafka 통합 테스트 안정성을 위한 @DirtiesContext 추가 및 consume 설정 개선&#10;&#10;- @DirtiesContext(classMode = AFTER_EACH_TEST_METHOD) 추가&#10;  → 테스트 간 Spring 컨텍스트를 매번 초기화하여 Kafka 메시지 중복 수신 방지&#10;  → 테스트 간 상태 공유로 인한 오작동 방지 (특히 Kafka embedded broker 사용 시)&#10;  &#10;- embeddedKafkaBroker.consumeFromAnEmbeddedTopic() 인자 개선&#10;  → 기존: consumer, true, topicName&#10;  → 변경: consumer, topicName&#10;  → 최신 Spring Kafka API에 맞게 auto-commit 설정 제거하여 안정성 향상&#10;  &#10;- 목적: 통합 테스트에서 Kafka 메시지 누락, 중복 등 상태 의존성 제거">
      <option name="closed" value="true" />
      <created>1751189156382</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1751189156382</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="study: 스프링 기반 통합 테스트 - 도서 대출 시스템 초기 구현&#10;&#10;- Book 엔티티 생성(isbn, title, available 필드 포함)&#10;- BookRepository를 통해 ISBN으로 책 조회 기능 구현&#10;- LibraryService에서 책 대출 가능 여부 확인 및 대출 기능 구현&#10;- PushService를 이용해 Kafka로 대출 완료 알림 전송 기능 추가" />
    <MESSAGE value="study: 스프링 기반 통합 테스트 - controller 작성, DB를 연동하는 통합테스트 구성 진행" />
    <MESSAGE value="study: 스프링 기반 통합 테스트 - API 테스트" />
    <MESSAGE value="study: 스프링 기반 통합 테스트 - Kafka 연동하는 테스트&#10;&#10;- Spring Boot + Kafka 환경에서 API와 메시지 전송이 제대로 동작하는지 확인" />
    <MESSAGE value="study: 스프링 기반 통합 테스트 - Kafka 통합 테스트 안정성을 위한 @DirtiesContext 추가 및 consume 설정 개선&#10;&#10;- @DirtiesContext(classMode = AFTER_EACH_TEST_METHOD) 추가&#10;  → 테스트 간 Spring 컨텍스트를 매번 초기화하여 Kafka 메시지 중복 수신 방지&#10;  → 테스트 간 상태 공유로 인한 오작동 방지 (특히 Kafka embedded broker 사용 시)&#10;  &#10;- embeddedKafkaBroker.consumeFromAnEmbeddedTopic() 인자 개선&#10;  → 기존: consumer, true, topicName&#10;  → 변경: consumer, topicName&#10;  → 최신 Spring Kafka API에 맞게 auto-commit 설정 제거하여 안정성 향상&#10;  &#10;- 목적: 통합 테스트에서 Kafka 메시지 누락, 중복 등 상태 의존성 제거" />
    <option name="LAST_COMMIT_MESSAGE" value="study: 스프링 기반 통합 테스트 - Kafka 통합 테스트 안정성을 위한 @DirtiesContext 추가 및 consume 설정 개선&#10;&#10;- @DirtiesContext(classMode = AFTER_EACH_TEST_METHOD) 추가&#10;  → 테스트 간 Spring 컨텍스트를 매번 초기화하여 Kafka 메시지 중복 수신 방지&#10;  → 테스트 간 상태 공유로 인한 오작동 방지 (특히 Kafka embedded broker 사용 시)&#10;  &#10;- embeddedKafkaBroker.consumeFromAnEmbeddedTopic() 인자 개선&#10;  → 기존: consumer, true, topicName&#10;  → 변경: consumer, topicName&#10;  → 최신 Spring Kafka API에 맞게 auto-commit 설정 제거하여 안정성 향상&#10;  &#10;- 목적: 통합 테스트에서 Kafka 메시지 누락, 중복 등 상태 의존성 제거" />
  </component>
</project>